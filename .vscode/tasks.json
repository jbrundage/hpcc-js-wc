{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "serve",
			"type": "npm",
			"script": "serve",
			"presentation": {
				"group": "group-build"
			},
			"isBackground": true
		},
		{
			"label": "syntax-watch",
			"type": "npm",
			"script": "syntax-watch",
			"problemMatcher": [
				"$tsc-watch"
			],
			"presentation": {
				"group": "group-build"
			},
			"isBackground": true
		},
		{
			"label": "esbuild-watch",
			"type": "npm",
			"script": "esbuild-watch",
			"presentation": {
				"group": "group-build"
			},
			"isBackground": true
		},
		{
			"label": "compile-watch",
			"type": "npm",
			"script": "compile-watch",
			"problemMatcher": [
				"$tsc-watch"
			],
			"presentation": {
				"group": "group-build"
			}
		},
		{
			"label": "bundle-watch",
			"type": "npm",
			"script": "bundle-watch",
			"presentation": {
				"group": "group-build"
			}
		},
		{
			"label": "serve-docs",
			"type": "npm",
			"script": "serve-docs",
			"problemMatcher": {
				"owner": "node",
				"fileLocation": [
					"relative",
					"${workspaceFolder}"
				],
				"pattern": {
					//  TODO - not accurate
					"regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
					"file": 1,
					"line": 2,
					"column": 3,
					"severity": 4,
					"message": 5
				},
				"background": {
					"activeOnStart": true,
					"beginsPattern": "^vitepress",
					"endsPattern": "^  > Network"
				}
			},
			"presentation": {
				"group": "group-build"
			},
			"isBackground": true
		},
		{
			"label": "serve-vite",
			"type": "npm",
			"script": "serve-vite",
			"problemMatcher": {
				"owner": "node",
				"fileLocation": [
					"relative",
					"${workspaceFolder}"
				],
				"pattern": {
					"regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
					"file": 1,
					"line": 2,
					"column": 3,
					"severity": 4,
					"message": 5
				},
				"background": {
					"activeOnStart": true,
					"beginsPattern": "^  vite",
					"endsPattern": "^  ready in "
				}
			},
			"presentation": {
				"group": "group-build"
			},
			"isBackground": true
		},
		{
			"label": "Terminate All Tasks",
			"command": "echo ${input:terminate}",
			"type": "shell",
			"problemMatcher": []
		},
		{
			"label": "build",
			"dependsOn": [
				"syntax-watch",
			],
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"problemMatcher": [],
			"isBackground": true
		}
	],
	"inputs": [
		{
			"id": "terminate",
			"type": "command",
			"command": "workbench.action.tasks.terminate",
			"args": "terminateAll"
		}
	]
}